syntax = "proto3";

package service.customer;

option go_package = "github.com/dinhtp/lets-go-pbtype/service";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "google/protobuf/empty.proto";
import "github.com/dinhtp/lets-go-pbtype/message/customer.proto";

// Enable custom Marshal method.
option (gogoproto.marshaler_all) = true;
// Enable custom Unmarshal method.
option (gogoproto.unmarshaler_all) = true;
// Enable custom Size method (Required by Marshal and Unmarshal).
option (gogoproto.sizer_all) = true;
// Enable registration with golang/protobuf for the grpc-gateway.
option (gogoproto.goproto_registration) = true;
// Enable generation of XXX_MessageName methods for grpc-go/status.
option (gogoproto.messagename_all) = true;

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
        version: "0.0.1";
    };
    external_docs: {
        url: "https://github.com/dinhtp/lets-go-pbtype/service/customer";
        description: "Customer API";
    }
    schemes: HTTPS;
};

service CustomerService {
    rpc Create(message.customer.Customer) returns (message.customer.Customer) {
        option (google.api.http) = {
            post: "/{platform}/customer"
            body: "*"
        };
    };
    rpc Update(message.customer.Customer) returns (message.customer.Customer) {
        option (google.api.http) = {
            put: "/{platform}/customer/{id}"
            body: "*"
        };
    };
    rpc Get(message.customer.OneCustomerRequest) returns (message.customer.Customer) {
        option (google.api.http) = {
            get: "/{platform}/customer/{id}"
        };
    };
    rpc List(message.customer.ListCustomerRequest) returns (message.customer.ListCustomerResponse) {
        option (google.api.http) = {
            get: "/{platform}/customers"
        };
    };
    rpc Delete(message.customer.OneCustomerRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/{platform}/customer/{id}"
        };
    };
}