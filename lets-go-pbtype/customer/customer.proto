syntax = "proto3";

package message.customer;

option go_package = "github.com/dinhtp/lets-go-pbtype/customer";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

// Enable custom Marshal method.
option (gogoproto.marshaler_all) = true;
// Enable custom Unmarshal method.
option (gogoproto.unmarshaler_all) = true;
// Enable custom Size method (Required by Marshal and Unmarshal).
option (gogoproto.sizer_all) = true;
// Enable registration with golang/protobuf for the grpc-gateway.
option (gogoproto.goproto_registration) = true;
// Enable generation of XXX_MessageName methods for grpc-go/status.
option (gogoproto.messagename_all) = true;

message Customer {
    string id = 1;
    string merchant_id = 2;
    string store_id = 3;
    string external_id = 4;

    string type = 10;
    string status = 11;
    string code = 12;
    string prefix = 13;
    string first_name = 14;
    string middle_name = 15;
    string last_name = 16;
    string suffix = 17;
    string tax_number = 18;
    string gender = 19;
    string dob = 20;
    string phone = 21;
    string email = 22;
    string note = 23;
    string tags = 24;
    string source = 25;
    string last_updated_source = 26;

    string store_credit = 30;
    bool is_active = 31;
    string group_id = 32;
    string company_id = 33;
    string company_name = 34;
    string default_billing_id = 35;
    string default_billing_external_id = 36;
    string default_shipping_id = 37;
    string default_shipping_external_id = 38;
    bool is_subscribed = 39;

    string created_at = 60;
    string updated_at = 61;
}

message OneCustomerRequest {
    string merchant_id = 1;
    string id = 2;
}

message ListCustomerRequest {
    string merchant_id = 1;
    uint32 page = 2;
    uint32 limit = 3;
    bool with_count = 4;
    string created_at_min = 5;
    string created_at_max = 6;
    string page_info = 7;
    string search = 8;
    string fields = 9;
}

message ListCustomerResponse {
    repeated Customer items = 1;
    uint32 max_page = 2;
    uint32 total_count = 3;
    uint32 page = 4;
    uint32 limit = 5;
    string page_info = 6;
    string next_page_info = 7;
    string prev_page_info = 8;
}

service CustomerService {
    rpc Create(Customer) returns (Customer) {
        option (google.api.http) = {
            post: "/go/customer"
            body: "*"
        };
    };
    rpc Update(Customer) returns (Customer) {
        option (google.api.http) = {
            put: "/go/customer/{id}"
            body: "*"
        };
    };
    rpc Get(OneCustomerRequest) returns (Customer) {
        option (google.api.http) = {
            get: "/go/customer/{id}"
        };
    };
    rpc List(ListCustomerRequest) returns (ListCustomerResponse) {
        option (google.api.http) = {
            get: "/go/customers"
        };
    };
    rpc Delete(OneCustomerRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/go/customer/{id}"
        };
    };
}

